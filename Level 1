#!/usr/bin/python
import thread
import threading
from threading import Lock
import time

cv = Lock()
wheels = [True,True,True,True,True,True]
count = 0 
blocked = False
freeweeling = False
sinking = False

# Iterates through the array
def count_problems(threadName, delay):
    global count
    global blocked
    global freeweeling
    global sinking
    
    while 1:
     
     while blocked == True or freeweeling == True or sinking == True:
        cv.acquire()      
        count = count + 1
        print (threadName,"Number of problems",count) 
        time.sleep(delay)
        blocked = False
        freeweeling = False
        sinking = False   
        time.sleep(delay)
        cv.release() 
        break
            

def solve(threadName, delay):
    global count
    global blocked
    global freeweeling
    global sinking
    
    while 1:
    
      while blocked != True or freeweeling != True or sinking != True:                              
        while 1:
        
            print(threadName, "Working")
            time.sleep(delay)
            
            
            if blocked == True:
              time.sleep(delay)
              cv.acquire()
              print (threadName, "Problem solved")
              cv.release()
              time.sleep(delay)
              blocked = False
              break         
                
            if freeweeling == True:
              time.sleep(delay)
              cv.acquire()
              print (threadName, "Problem solved")
              cv.release()
              time.sleep(delay)
              freeweeling = False
              break
                
            if sinking == True:
              time.sleep(delay)
              cv.acquire()
              print (threadName, "Problem solved")
              cv.release()
              time.sleep(delay)
              sinking = False
              break
              

def problems(threadName,delay):
    global count
    global blocked
    global freeweeling
    global sinking
    
    while 1:

      time.sleep(delay)
      command = raw_input("Enter the problem: b-blocked, f-freeweeling, s-sinking:\n")
      time.sleep(delay)
      
      
       
      if command == "b": 
          blocked = True   
          print("Wheel Blocked \n")
          time.sleep(delay)
          print (threadName, "Waiting to solve the problem")
          time.sleep(delay)
                
      if command == "f":
          freeweeling = True
          print("Wheel was freewheeling\n")
          time.sleep(delay)
          print (threadName, "Waiting to solve the problem")
          time.sleep(delay)
          
      if command == "s":
          sinking = True
          print("wheel was sinking \n")
          time.sleep(delay)
          print (threadName, "Waiting to solve the problem")
          time.sleep(delay)
      
wheels = [True,True,True,True,True,True]
    

# Create three threads
try:
   t1 = thread.start_new_thread( problems, ("Thread-2",2 ) )
   t2 = thread.start_new_thread( solve, ("Thread-1", 2 ) )
   t3 = thread.start_new_thread( count_problems, ("Thread-3", 2 ) )
   
except:
   print "Error: unable to start thread"

while 1:
   pass
